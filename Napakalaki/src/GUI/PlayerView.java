/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JPanel;
import napakalaki.CultistPlayer;
import napakalaki.Napakalaki;
import napakalaki.Player;
import napakalaki.Treasure;

/**
 *
 * @author david
 */
public class PlayerView extends javax.swing.JPanel {

    private Napakalaki napakalakiModel;
    private Player playerModel;
    private CultistPlayer cultist;
    
    public void setNapakalaki(Napakalaki n){
        this.napakalakiModel = n;
    }
    
    public Player getPlayer() { return this.playerModel;}
    
    public void setPlayer(Player p){
        this.playerModel = p;
        
        this.fillTreasurePanel(this.visibles, p.getVisibleTreasures());
        this.fillTreasurePanel(this.ocultos, p.getHiddenTreasures());
        
        namePlayer.setText("Jugador:    " + p.getName());
        playerLevel.setText("Nivel: "+Integer.toString(p.getLevels()));
       
        if(p.getEnemy() != null){
            enem.setText("Enemigo:  " + p.enemy.getName());
        }
        
        if( p instanceof CultistPlayer){
            secta.setText("Tipo jugador: Sectario");
        }else{
            secta.setText("Tipo jugador: Normal");        
        }
        
        comb.setText("Nivel de combate: "+Integer.toString(playerModel.getCombatLevel()));
        
        nsecta.setText("Cuantos sectarios:  "+Integer.toString(cultist.getTotalCultistPlayers()));
        
        this.buttonRobar.setEnabled(this.playerModel.canISteal());
            
    }
    
    private void fillTreasurePanel (JPanel aPanel, ArrayList<Treasure> aList) {
        // Se elimina la informaci칩n antigua
        aPanel.removeAll();
        // Se recorre la lista de tesoros construyendo y a침adiendo sus vistas
    
        for (Treasure t : aList) {
            TreasureView aTreasureView = new TreasureView();
            aTreasureView.setTreasure (t);
            aTreasureView.setVisible (true);
            aPanel.add (aTreasureView);
        }
        // Se fuerza la actualizaci칩n visual del panel
        aPanel.repaint();
        aPanel.revalidate();
    }
    
    /**
     * Creates new form PlayerView
     */
    public PlayerView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pendingCon = new javax.swing.JScrollPane();
        pend = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        namePlayer = new javax.swing.JLabel();
        playerLevel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ocultos = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        visibles = new javax.swing.JPanel();
        comb = new javax.swing.JLabel();
        enem = new javax.swing.JLabel();
        secta = new javax.swing.JLabel();
        nsecta = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        buttonRobar = new javax.swing.JButton();
        buttonHacerVisible = new javax.swing.JButton();
        buttonDescartar = new javax.swing.JButton();
        buttonDescartaTodo = new javax.swing.JButton();
        back = new javax.swing.JLabel();

        pend.setColumns(20);
        pend.setRows(5);
        pendingCon.setViewportView(pend);

        setBackground(new java.awt.Color(1, 1, 1));
        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(1, 1, 1), 5, true));
        setPreferredSize(new java.awt.Dimension(1368, 295));
        setLayout(null);

        jLabel8.setBackground(new java.awt.Color(1, 1, 1));
        jLabel8.setToolTipText("");
        jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        add(jLabel8);
        jLabel8.setBounds(1054, 0, 6, 360);

        namePlayer.setForeground(new java.awt.Color(40, 40, 40));
        namePlayer.setText("Jugador:");
        namePlayer.setToolTipText("");
        add(namePlayer);
        namePlayer.setBounds(20, 20, 210, 17);

        playerLevel.setForeground(new java.awt.Color(40, 40, 40));
        playerLevel.setText("Nivel:");
        playerLevel.setToolTipText("");
        add(playerLevel);
        playerLevel.setBounds(300, 20, 120, 17);

        jLabel1.setForeground(new java.awt.Color(40, 40, 40));
        jLabel1.setText("Tesoros visibles");
        jLabel1.setToolTipText("");
        add(jLabel1);
        jLabel1.setBounds(20, 80, 230, 17);

        jLabel2.setForeground(new java.awt.Color(40, 40, 40));
        jLabel2.setText("Tesoros  ocultos");
        jLabel2.setToolTipText("");
        add(jLabel2);
        jLabel2.setBounds(530, 80, 240, 17);

        ocultos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        ocultos.setToolTipText("");
        jScrollPane2.setViewportView(ocultos);

        add(jScrollPane2);
        jScrollPane2.setBounds(530, 110, 450, 240);

        visibles.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        visibles.setToolTipText("");
        jScrollPane1.setViewportView(visibles);

        add(jScrollPane1);
        jScrollPane1.setBounds(20, 110, 460, 240);

        comb.setForeground(new java.awt.Color(40, 40, 40));
        comb.setText("Nivel de combate:");
        comb.setToolTipText("");
        add(comb);
        comb.setBounds(500, 20, 290, 17);

        enem.setForeground(new java.awt.Color(40, 40, 40));
        enem.setText("Enemigo:");
        enem.setToolTipText("");
        add(enem);
        enem.setBounds(20, 50, 210, 17);

        secta.setForeground(new java.awt.Color(40, 40, 40));
        secta.setText("Sectario:");
        secta.setToolTipText("");
        add(secta);
        secta.setBounds(280, 50, 160, 17);

        nsecta.setForeground(new java.awt.Color(40, 40, 40));
        nsecta.setText("Cuantos sectarios:");
        nsecta.setToolTipText("");
        add(nsecta);
        nsecta.setBounds(480, 50, 330, 17);

        jLabel3.setForeground(new java.awt.Color(40, 40, 40));
        jLabel3.setText("Acciones");
        jLabel3.setToolTipText("");
        add(jLabel3);
        jLabel3.setBounds(1180, 40, 62, 31);

        buttonRobar.setText("Robar tesoro");
        buttonRobar.setToolTipText("");
        buttonRobar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRobarActionPerformed(evt);
            }
        });
        add(buttonRobar);
        buttonRobar.setBounds(1100, 100, 240, 29);

        buttonHacerVisible.setText("Equipar tesoro");
        buttonHacerVisible.setToolTipText("");
        buttonHacerVisible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHacerVisibleActionPerformed(evt);
            }
        });
        add(buttonHacerVisible);
        buttonHacerVisible.setBounds(1100, 150, 240, 29);

        buttonDescartar.setText("Descartar tesoro");
        buttonDescartar.setToolTipText("");
        buttonDescartar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDescartarActionPerformed(evt);
            }
        });
        add(buttonDescartar);
        buttonDescartar.setBounds(1100, 200, 240, 29);

        buttonDescartaTodo.setText("Descartar todo");
        buttonDescartaTodo.setToolTipText("");
        buttonDescartaTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDescartaTodoActionPerformed(evt);
            }
        });
        add(buttonDescartaTodo);
        buttonDescartaTodo.setBounds(1100, 250, 240, 29);

        back.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/imagenesNapakalaki/sss.png"))); // NOI18N
        back.setToolTipText("");
        back.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        back.setAlignmentY(0.0F);
        add(back);
        back.setBounds(10, 10, 1360, 350);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonRobarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRobarActionPerformed
       this.playerModel.stealTreasure(); // TODO add your handling code here:
       this.setPlayer(playerModel);
       
       repaint();
       revalidate();
    }//GEN-LAST:event_buttonRobarActionPerformed

    private ArrayList<Treasure> getSelectedTreasures(JPanel aPanel) {
        // Se recorren los tesoros que contiene el panel,
        //almacenando en un vector aquellos que est치n seleccionados.
        //Finalmente se devuelve dicho vector.
        
        TreasureView tv;
        
        ArrayList<Treasure> output = new ArrayList();
        
        for (Component c : aPanel.getComponents()) {
            tv = (TreasureView) c;

            if ( tv.isSelected() )
                output.add ( tv.getTreasure() );
        }
        
        return output;
    }
    
    private void buttonHacerVisibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHacerVisibleActionPerformed
        
        ArrayList<Treasure> treasures = this.getSelectedTreasures(this.ocultos);
        
        this.napakalakiModel.makeTreasuresVisible(treasures);
        
        this.setPlayer(napakalakiModel.getCurrentPlayer());
        
        repaint();
        revalidate();
        
    }//GEN-LAST:event_buttonHacerVisibleActionPerformed

    private void buttonDescartarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDescartarActionPerformed
        ArrayList<Treasure> v = this.getSelectedTreasures(this.visibles);
        ArrayList<Treasure> h = this.getSelectedTreasures(this.ocultos);
        
        
        this.napakalakiModel.discardHiddenTreasures(h);
        this.napakalakiModel.discardVisibleTreasures(v);
        
        this.setPlayer(napakalakiModel.getCurrentPlayer());
        this.setNapakalaki(napakalakiModel);
        
        repaint();
        revalidate();
        
    }//GEN-LAST:event_buttonDescartarActionPerformed

    private void buttonDescartaTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDescartaTodoActionPerformed
        this.playerModel.discardAllTreasures();
        
        this.setPlayer(playerModel);
        this.setNapakalaki(napakalakiModel);
        
        repaint();
        revalidate();
    }//GEN-LAST:event_buttonDescartaTodoActionPerformed

    public void setDescartarTodo(Boolean b){
        this.buttonDescartaTodo.setEnabled(b);
    }
    
    public void setDescartarTesoro(Boolean b){
        this.buttonDescartar.setEnabled(b);
    } 
    
    public void setMakeVisible(Boolean b){
        this.buttonHacerVisible.setEnabled(b);
    }
    
    public void setRobar(Boolean b){
        this.buttonRobar.setEnabled(b);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel back;
    private javax.swing.JButton buttonDescartaTodo;
    private javax.swing.JButton buttonDescartar;
    private javax.swing.JButton buttonHacerVisible;
    private javax.swing.JButton buttonRobar;
    private javax.swing.JLabel comb;
    private javax.swing.JLabel enem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel namePlayer;
    private javax.swing.JLabel nsecta;
    private javax.swing.JPanel ocultos;
    private javax.swing.JTextArea pend;
    private javax.swing.JScrollPane pendingCon;
    private javax.swing.JLabel playerLevel;
    private javax.swing.JLabel secta;
    private javax.swing.JPanel visibles;
    // End of variables declaration//GEN-END:variables
}
